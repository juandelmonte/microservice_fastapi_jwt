version: '3.8'
services:
  auth-service:
    build: ./auth-service
    container_name: auth-service
    env_file:
      - .env
    ports:
      - '8000:8000'
    depends_on:
      - db
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.auth.rule=Host(`auth.localhost`)'
      - 'traefik.http.services.auth.loadbalancer.server.port=8000'

  api-service:
    build: ./api-service
    container_name: api-service
    env_file:
      - .env
    ports:
      - '8001:8001'
    depends_on:
      - auth-service
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.api.rule=Host(`api.localhost`)'
      - 'traefik.http.services.api.loadbalancer.server.port=8001'

  db:
    image: postgres:15
    container_name: postgres-db
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '5433:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data

  traefik:
    image: traefik:v3.0
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --entrypoints.web.address=:80
    ports:
      - '80:80'
      - '8080:8080'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  postgres-data: